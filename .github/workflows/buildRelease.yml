name: BuildRelease

# 指定此工作流的触发器
on:
  workflow_dispatch:
  push:
    branches:
      - master
    # 匹配特定标签 (refs/tags)
    tags:
      - 'v*' # 推送事件匹配 v*, 例如 v1.0，v20.15.10 等来触发工作流
      
# 需要运行的作业组合
jobs:
  # 任务：创建 release 版本
  create-release:
    name: SwitchApp
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v2
          
    - name: 当前日期
      id: date
      run: |
        echo "date=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        # ${{ steps.date.outputs.date }}

    - name: 整理文件
      run: |
        # 查找删除.delme文件（用来实现GitHub空目录）
        find Files -type f -iname .delme -delete
        # awk -F "|" '$2~"DBI"{print $2,$3}' README.md
        # 循环检查Files目录下各app版本，有更新打包发布
        for file in Files/*
        do
        if [ -d "$file" ]
        then
          # echo "$file 是目录"
          fn=${file##*/}
          v_old=`awk -F "|" '$2~/'"$fn"'/ {print $3}' README.md`
          v_new=`ls $file -a | grep -i -E 'version_.*' | awk -F "_" '{print $2}'`
          function version_gt() { test "$(echo "$@" | tr " " "\n" | sort -V | head -n 1)" != "$1"; }
          if version_gt $v_new $v_old; then
            echo "$fn 版本更新：$v_old ⬆ $v_new"
            perl -pi -e "s/$fn\|$v_old\|.*\|/$fn\|$v_new\|${{ steps.date.outputs.date }}\|/g" README.md
            cd $file
            zip -qr ../${file##*/}.zip *
            cd ../../
          fi
        elif [ -f "$file" ]
        then
          echo "$file 是文件"
        fi
        done
        cat README.md
        # 将压缩文件移动到/Output目录
        if ! ls Files/*.zip >/dev/null 2>&1; then
          mkdir -p Output && mv Files/*.zip Output
        else
          echo "无任何文件需要更新"
        fi
   
    - name: 发布更新
      uses: ncipollo/release-action@v1
      with:
        token: "${{ secrets.GITHUB_TOKEN }}"
        allowUpdates: true
        tag: custom # ${{ steps.date.outputs.date }}
        prerelease: false
        artifacts: "Output/*.zip"
        
    - name: commit to rep
      run: |
        git add README.md
        git commit -m "Update README.md"
        git push
